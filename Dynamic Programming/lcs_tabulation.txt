// lcs using tabulation (Bottom - up approach)
#include <iostream>
#include <string.h>
using namespace std;

int lcs(string s1, string s2)
{
    int m = s1.length();
    int n = s2.length();
    
    int dp[m+1][n+1];
    
    for (int i = 0; i <= m; i++)    // first col = 0
        dp[i][0] = 0;
        
    for (int j = 0; j <= n; j++)   // first row = 0
        dp[0][j] = 0;
        
    for (int i = 1; i <= m; i++) {
        for (int j = 1; j <= n; j++) {
            if (s1[i-1] == s2[j-1]) {
                dp[i][j] = 1 + dp[i-1][j-1];
            }
            else {
                dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
            }
        }
    }
    
    return dp[m][n];
}

int main()
{
    string s1 = "ABCDGH";
    string s2 = "BKDJHG";
    
    
    
    cout << lcs(s1, s2);
}