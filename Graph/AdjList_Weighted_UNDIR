// Adj List representation of a weighted uundirected graph

#include <iostream>
#include <vector>
#include <utility>
using namespace std;

void addEdge(vector<pair<int, int>> graph[], int u, int v, int w)
{
    graph[u].push_back(make_pair(v, w));
    graph[v].push_back(make_pair(u, w));
}


void printGraph(vector<pair<int, int>> graph[], int V)
{
    for (int u = 0; u < V; u++) {
        cout << u << " -> ";
        for (int v = 0; v < V; v++) {
            cout << graph[u][v].first << "-w = " << graph[u][v].second << " || ";
        }
        cout << endl;
    }
}

int main()
{
    //cout<<"Hello World";
    int V = 4;
    vector<pair<int, int>> graph[V];
    
    addEdge(graph, 0, 1, 5);
    addEdge(graph, 0, 2, 8);
    addEdge(graph, 0, 3, 100);
    addEdge(graph, 1, 3, 15);
    addEdge(graph, 1, 2, 10);
    addEdge(graph, 2, 3, 20);
    
    printGraph(graph, V);
    
    return 0;
}
