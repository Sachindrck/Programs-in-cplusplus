// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
bool graphColoring(bool graph[101][101], int m, int V) {
    // your code here
    int visited[V] = {0};
    int colors[V];
    
    for (int i = 0; i < V; i++) {
        colors[i] = 1;
    }
    queue <int> q;
    for (int u = 0; u < V; u++) {
        
        if (visited[u]) {
            continue;
        }
        
        visited[u] = 1;
        q.push(u);
        
        while (!q.empty())
        {
            int x = q.front();
            q.pop();
            
            for (int v = 0; v < V; v++) {
                if (graph[x][v] == 1) {
                    if (colors[x] == colors[v]) {
                        colors[v]+=1;
                    }
                    
                    if (!visited[v]) {
                        visited[v] = 1;
                        q.push(v);
                    }
                }
            }
        }
    }
    
    for (int i = 0; i < V; i++) {
        if (colors[i] > m || colors[i] == 0)
            return false;
    }
    
    return true;
    
}
// { Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, m, e;
        cin >> n >> m >> e;
        int i;
        bool graph[101][101];
        for (i = 0; i < n; i++) {
            memset(graph[i], 0, sizeof(graph[i]));
        }
        for (i = 0; i < e; i++) {
            int a, b;
            cin >> a >> b;
            graph[a - 1][b - 1] = 1;
            graph[b - 1][a - 1] = 1;
        }
        cout << graphColoring(graph, m, n) << endl;
    }
    return 0;
}
  // } Driver Code Ends